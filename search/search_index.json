{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Order Service","text":"<p>O <code>order-service</code> \u00e9 o microsservi\u00e7o respons\u00e1vel por registrar e consultar pedidos realizados pelos usu\u00e1rios. Ele integra-se com o <code>product-service</code> para verificar produtos e calcular totais, e com o <code>account-service</code> para associar pedidos a usu\u00e1rios autenticados.</p>"},{"location":"#funcionalidades","title":"Funcionalidades","text":"<ul> <li>Registrar Pedido: Permite que um usu\u00e1rio fa\u00e7a um pedido de produtos dispon\u00edveis.</li> <li>Consultar Pedidos: Permite que um usu\u00e1rio consulte seus pedidos anteriores.</li> <li>Consultar Detalhes do Pedido: Permite que um usu\u00e1rio veja os detalhes de um pedido espec\u00edfico.</li> </ul>"},{"location":"#integracao-com-jenkins","title":"Integra\u00e7\u00e3o com Jenkins","text":"<p>Este projeto conta com um arquivo Jenkinsfile (na raiz do reposit\u00f3rio) que define uma pipeline de integra\u00e7\u00e3o cont\u00ednua para compilar automaticamente o m\u00f3dulo sempre que houver altera\u00e7\u00f5es no reposit\u00f3rio.</p>"},{"location":"#para-que-serve","title":"Para que serve?","text":"<ul> <li> <p>Compila\u00e7\u00e3o automatizada: toda altera\u00e7\u00e3o no reposit\u00f3rio dispara o build do Maven, detectando problemas de compila\u00e7\u00e3o antes do merge.</p> </li> <li> <p>Imagens Docker consistentes: gera e publica automaticamente imagens multiplataforma, facilitando o deploy em diferentes ambientes (x86_64 e ARM).</p> </li> <li> <p>Seguran\u00e7a das credenciais: utiliza credenciais armazenadas no Jenkins (identificador dockerhub-credential), evitando exposi\u00e7\u00e3o de senhas no c\u00f3digo.</p> </li> </ul> <p>Dessa forma, a integra\u00e7\u00e3o com Jenkins garante que o order-service esteja sempre compilando e empacotado corretamente, com uma imagem Docker pronta para ser implantada nos clusters de produ\u00e7\u00e3o ou QA.</p>"},{"location":"arquitetura/","title":"Arquitetura","text":""},{"location":"arquitetura/#estrutura-de-pastas","title":"Estrutura de Pastas","text":"<pre><code>src/main/java/store/order/\n\u251c\u2500\u2500 Order.java # Entidade de dom\u00ednio\n\u251c\u2500\u2500 OrderModel.java # Entidade JPA\n\u251c\u2500\u2500 OrderRepository.java # Persist\u00eancia da Order\n\u251c\u2500\u2500 OrderItem.java\n\u251c\u2500\u2500 OrderItemModel.java\n\u251c\u2500\u2500 OrderItemRepository.java\n\u251c\u2500\u2500 OrderService.java # L\u00f3gica de neg\u00f3cio\n\u251c\u2500\u2500 OrderParser.java # Convers\u00e3o DTO \u2194 Dom\u00ednio\n\u251c\u2500\u2500 OrderResource.java # Controlador REST\n\u251c\u2500\u2500 OrderApplication.java # Classe principal\n\u2514\u2500\u2500 resources/\n\u2502 \u251c\u2500\u2500 application.yaml # Configura\u00e7\u00f5es de ambiente\n\u2502 \u2514\u2500\u2500 db/migration/ # Scripts Flyway\n</code></pre>"},{"location":"arquitetura/#integracoes","title":"Integra\u00e7\u00f5es","text":"<ul> <li><code>ProductController</code> (Feign) \u2192 busca pre\u00e7o do produto</li> <li><code>AccountOut</code> \u2192 representa o dono do pedido (id vem via header)</li> </ul>"},{"location":"entidades/","title":"Entidades e Modelos","text":""},{"location":"entidades/#order","title":"Order","text":"<p>Entidade de dom\u00ednio de um pedido.</p> <ul> <li><code>id</code></li> <li><code>date</code></li> <li><code>items: List&lt;OrderItem&gt;</code></li> <li><code>account: AccountOut</code></li> <li><code>total</code></li> </ul>"},{"location":"entidades/#orderitem","title":"OrderItem","text":"<p>Item de um pedido.</p> <ul> <li><code>id</code></li> <li><code>product: ProductOut</code></li> <li><code>order: Order</code></li> <li><code>quantity</code></li> <li><code>total</code></li> </ul>"},{"location":"entidades/#ordermodel","title":"OrderModel","text":"<p>Entidade JPA (tabela <code>orders</code>)</p> <ul> <li><code>id_order</code>, <code>id_account</code>, <code>dt_date</code>, <code>db_total</code></li> </ul>"},{"location":"entidades/#orderitemmodel","title":"OrderItemModel","text":"<p>Entidade JPA (tabela <code>order_item</code>)</p> <ul> <li><code>id_order_item</code>, <code>id_order</code>, <code>id_product</code>, <code>int_quantity</code>, <code>nr_price_product</code>, <code>nr_total</code></li> </ul>"},{"location":"entidades/#conversores","title":"Conversores","text":"<p>A convers\u00e3o entre DTOs e entidades/dom\u00ednio \u00e9 feita por <code>OrderParser</code>.</p>"},{"location":"fluxo/","title":"Fluxo de Cria\u00e7\u00e3o de Pedido","text":""},{"location":"fluxo/#1-o-cliente-envia-um-orderin-contendo-os-produtos-e-quantidades","title":"1. O cliente envia um <code>OrderIn</code> contendo os produtos e quantidades.","text":""},{"location":"fluxo/#2-o-orderresource-converte-para-order-e-injeta-o-idaccount-do-header","title":"2. O <code>OrderResource</code> converte para <code>Order</code> e injeta o <code>idAccount</code> do header.","text":""},{"location":"fluxo/#3-o-orderservice","title":"3. O <code>OrderService</code>:","text":"<ul> <li>Busca cada <code>ProductOut</code> pelo <code>idProduct</code> via <code>ProductController</code></li> <li>Valida exist\u00eancia e calcula <code>total</code> de cada item</li> <li>Soma o <code>total</code> geral</li> <li>Persiste a <code>OrderModel</code></li> <li>Persiste os <code>OrderItemModel</code> com <code>id_order</code> referenciado</li> </ul>"},{"location":"fluxo/#4-retorna-um-orderout-com-o-pedido-criado","title":"4. Retorna um <code>OrderOut</code> com o pedido criado.","text":""},{"location":"fluxo/#fluxo-de-busca","title":"Fluxo de Busca","text":"<ul> <li><code>findAll()</code>: retorna todos os pedidos</li> <li><code>findById()</code>: exige <code>id-account</code> e verifica propriedade do pedido</li> </ul>"},{"location":"setup/","title":"Setup e Execu\u00e7\u00e3o - Order Service","text":""},{"location":"setup/#requisitos","title":"Requisitos","text":"<ul> <li>Java 17+</li> <li>Spring Boot</li> <li>Spring Data JPA</li> <li>OpenFeign</li> <li>PostgreSQL</li> <li>Flyway</li> <li>Lombok</li> </ul>"},{"location":"setup/#dependencias-principais","title":"Depend\u00eancias principais","text":"<ul> <li><code>spring-boot-starter-data-jpa</code></li> <li><code>spring-boot-starter-web</code></li> <li><code>spring-boot-starter-validation</code></li> <li><code>spring-cloud-starter-openfeign</code></li> <li><code>flyway-core</code></li> <li><code>lombok</code></li> </ul>"},{"location":"setup/#como-compilar","title":"Como compilar","text":"<pre><code>mvn clean package\n</code></pre>"},{"location":"setup/#observacoes","title":"Observa\u00e7\u00f5es","text":"<ul> <li> <p>O servi\u00e7o depende do header <code>id-account</code> para associar pedidos</p> </li> <li> <p>Integra com <code>product-service</code> para valida\u00e7\u00e3o dos produtos e pre\u00e7os</p> </li> <li> <p>Tokens s\u00e3o verificados pelo <code>gateway-service</code></p> </li> </ul>"}]}